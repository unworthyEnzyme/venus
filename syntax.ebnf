statement =
    | print_statement
    | assignment_statement
    | variable_declaration_statement
    | while_statement
    | spawn_statement
    | yield_statement
    | function_declaration_statement
    | return_statement
    | block_statement
    | channel_send_statement

print_statement = "print" expression
assignment_statement = expression "=" expression
variable_declaration_statement = "let" identifier "=" expression
while_statement = "while" expression block_statement
spawn_statement = "spawn" expression
yield_statement = "yield"
function_declaration_statement = "fun" identifier "(" (identifier ',')* identifier? ")" block_statement
return_statement = "return" expression
block_statement = "{" (statement ';')* "}"
channel_send_statement = expression "<-" expression

expression =
    | NUMBER
    | STRING
    | IDENTIFIER
    | binary_expression
    | call_expression
    | lambda_expression
    | channel_receive_expression
    | object_literal_expression
    | member_access_expression

object_literal_expression = "{" (IDENTIFIER ":" expression ',')* (IDENTIFIER ":" expression)? "}"
member_access_expression = expression "." IDENTIFIER

binary_expression =
    | expression "+" expression
    | expression "-" expression
    | expression "*" expression
    | expression "/" expression
    | expression "==" expression
    | expression "!=" expression
    | expression "<" expression
    | expression ">" expression

call_expression = expression "(" (expression ',')* expression? ")"
lambda_expression = "|" (identifier ',')* identifier? "|" block_statement
channel_receive_expression = "<-" expression
